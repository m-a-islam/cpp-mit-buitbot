from buildbot.plugins import *

c = BuildmasterConfig = {}
c['protocols'] = {'pb': {'port': 9989}}
c['buildbotURL'] = "http://localhost:8010/"
c['workers'] = [worker.Worker('cpp-worker', 'cpp-pass')]

factory = util.BuildFactory()

factory.addStep(steps.RemoveDirectory(dir="build"))
factory.addStep(steps.MakeDirectory(dir="build"))


factory.addStep(steps.Git(
    repourl="https://github.com/m-a-islam/cpp-mit-buitbot.git",
    mode="full",
    method="clean",
    workdir="src",
    branch=util.Property('branch', default='main'),
    haltOnFailure=True
))

factory.addStep(steps.ShellCommand(
    name="checkout-revision",
    workdir="src",
    env={"REV": util.Property("revision", default="")},
    command=["bash","-lc",
             'if [ -n "$REV" ]; then '
             '  echo "Checking out $REV"; '
             '  git fetch --all --tags && git checkout --detach "$REV"; '
             'else '
             '  echo "no revision provided"; '
             'fi'],
    haltOnFailure=True
))



factory.addStep(steps.ShellCommand(
    name="ls-tree",
    workdir=".",
    command=["bash","-lc","pwd; echo '--- src ---'; find src -maxdepth 2 -type f | sort"]
))


factory.addStep(steps.ShellCommand(
    name="compile",
    workdir="src",
    command=["bash","-lc","g++ -std=c++17 -O2 -I include -o ../build/hello main.cpp"]
))


factory.addStep(steps.ShellCommand(
    name="run",
    workdir=".",
    command=["bash","-lc","./build/hello"]
))

factory.addStep(steps.ShellCommand(
    name="test-output",
    workdir=".",
    command=["bash","-lc", 'out=$(./build/hello); echo "$out"; test "$out" = "Hello, Buildbot C++!"' ],
    haltOnFailure=True
))

factory.addStep(steps.ShellCommand(
    name="ls-before-upload",
    workdir=".",  # builder root
    command=["bash","-lc","pwd; echo '--- expect file at build/hello ---'; ls -l build || true; ls -l build/hello || true"]
))

factory.addStep(steps.FileUpload(
    workdir=".",
    workersrc="build/hello",
    masterdest=util.Interpolate("artifacts/hello-%(prop:buildnumber)s"),
    mode=0o755
))

force = schedulers.ForceScheduler(
    name="force",
    builderNames=["hello-cpp"],
    properties=[
        util.StringParameter(name="branch", default="main", label="Git branch"),
        util.StringParameter(name="revision", default="", label="Commit SHA (optional)"),
    ],
)
c['builders'] = [util.BuilderConfig(name="hello-cpp", workernames=["cpp-worker"], factory=factory)]
c['schedulers'] = [force]
c['title'] = "Buildbot C++ Demo"
c['titleURL'] = "http://localhost:8010"
c['www'] = dict(port=8010, plugins=dict(waterfall_view={}, console_view={}))
